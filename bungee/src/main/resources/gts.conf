# +----------------------------------------------------------------------------------------------+
# |                                      Essential Settings                                      |
# |                                                                                              |
# | These settings are general settings that help control basic functionality for GTS. How these |
# | settings are configured will determine exactly how the plugin works.                         |
# +----------------------------------------------------------------------------------------------+

# Specifies whether or not GTS is running in multi-server mode. Multi-Server mode will require
# a storage method that allows for external data storing. If an incorrect storage provider option
# is provided, GTS will not start.
#
# Alongside this, if you wish to have GTS run on a single-server setup, then it'll accept any
# database option. Note that simply using MySQL as your storage provider will not provide GTS
# with the ability to accurately use cross-server methods.
#
# To use multi-server mode, select true here. Otherwise, use false for single-server mode
multi-server = true

# Specifies the language to use for GTS.
#
# NOTE: If a language file doesn't exist for your language, edit the language file generated by the
# plugin to meet your language. GTS aims to ship all kinds of languages, but as the developer
# is only prominent in English, he needs some help providing these language options! If you find
# your language option was not available, consider writing up your own and sending it to the GTS
# development team to ship with future releases!
language = "en_us"

# Specifies we want GTS to output debug information regarding operations within the plugin.
#
# You really only want to turn this one if you want in depth information regarding transactions,
# as well as perhaps to diagnose an issue with the plugin.
debug = false

# +----------------------------------------------------------------------------------------------+
# |                                       Storage Settings                                       |
# +----------------------------------------------------------------------------------------------+

# How the plugin should store data
#
# - The various options are explained in more detail on the wiki:
#   https://github.com/lucko/LuckPerms/wiki/Choosing-a-Storage-type
#
# - Possible options:
#
#   |  Remote databases - require connection information to be configured below
#   |=> MySQL
#   |=> MariaDB (preferred over MySQL)
#   |=> PostgreSQL
#
#   |  Local databases - Databases which exist only locally
#   |=> H2 (Default)
#
#   |  Readable & editable text files - don't require any extra configuration
#   |=> JSON (.json files)
#
# - The JSON flatfile provider is the default option.
storage-method = "mariadb"

# The following configuration block is used to define the connection paramters for
# your selected storage provider.
#
# NOTE: These settings are only neccessary when using remote databases. JSON and other
# local storage providers require no connection information. If you are using a local
# storage provider option, you can ignore this section
data {

    # Defines the address and port for the database
    # - The standard DB engine port is used by default
    #   (MySQL = 3306, PostgreSQL = 5432)
    # - Specify as "host:port" if you use a different port
    address = "localhost"

    # Specifies the name of the database to store GTS data in.
    # - This database must already be created. GTS will make no attempt to create the database
    #   for you.
    database = "minecraft"

    # Connection credentials for the database
    username = "root"
    password = ""

    # These settings apply to the MySQL/MariaDB connection pool.
    # - The default values will typically be suitable for the majority of users.
    # - Do not change these settings unless you know what you're doing!
    pool-settings {

        # Sets the maximum size of the MySQL/MariaDB connection pool.
        # - Basically, this value will determine the maximum number of actual
        # connections to the database backend.
        # - More information about determining the size of connection pools can be found here:
        #   https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
        maximum-pool-size = 10

        # Sets the minimum number of idle connections that the pool will try to maintain.
        # - For maximum performance and responsiveness to spike demands, it is recommended to not set
        #   this value and instead allow the pool to act as a fixed size connection pool.
        #   (set this value to the same as 'maximum-pool-size')
        minimum-idle = 10

        # This setting controls the maximum lifetime of a connection in the pool in milliseconds.
        # - The value should be at least 30 seconds less than any database or infrastructure imposed
        #   connection time limit.
        maximum-lifetime = 1800000 # 30 minutes

        # This setting controls the maximum number of milliseconds that the plugin will wait for a
        # connection from the pool, before timing out.
        connection-timeout = 5000 # 5 seconds

        # This setting allows you to define extra properties for connections.
        properties {
            useUnicode = true
            characterEncoding = "utf8"
        }
    }
}

# The prefix for all GTS SQL tables.
# - Change this if you want to use different tables for different servers
table-prefix = "gts_"

# +----------------------------------------------------------------------------------------------+ #
# |                                      Messaging Service                                       | #
# |                                                                                              | #
# | These settings control the ways in which GTS will sync data and notify other servers of      | #
# | changes.                                                                                     | #
# +----------------------------------------------------------------------------------------------+ #

# Define which messaging service should be used by the plugin.
#
# - If enabled and configured, GTS will use the messaging service to inform other connected
#   servers of changes.
# - Data is NOT stored using this service. It is only used as a messaging platform.
#
# - If you decide to enable this feature, you should set "sync-minutes" to -1, as there is no need
#   for LuckPerms to poll the database for changes.
#
# - Possible options:
#   => pluginmsg Uses the plugin messaging channels to communicate with the proxy.
#                LuckPerms must be installed on your proxy & all connected servers backend servers.
#                Won't work if you have more than one proxy.
#   => redis     Uses Redis pub-sub to push changes. Your server connection info must be configured
#                below.
#   => none      Disables the service. This will trigger GTS into single server mode, even when
#                the multi-server setting is enabled
messaging-service = "pluginmsg"

# Settings for Redis
# - Port 6379 is the default port used by Redis.
# - If you wish to use a different port, set address to the following format: "host:port"
redis {
    enabled = false
    address = "localhost"
    password = ""
}

# +----------------------------------------------------------------------------------------------+ #
# |                                   Listing Management                                         | #
# |                                                                                              | #
# | These settings will specify how GTS should process Listings.                                 | #
# +----------------------------------------------------------------------------------------------+ #

# Specifies the number of listings a player can place on the GTS at one time.
#
# This number applies to all users, regardless of rank. This is to ensure nobody uses
# GTS in a play-to-win manner. GTS is meant to be a plugin that is fair for all users
max-listings-per-user = 5

# The below section refers to auction specifics.
auctions {

    # This option allows a user to cancel an auction that has bids placed on it already.
    #
    # NOTE: Admins will be able to bypass this setting, assuming they have the permission: gts.admin.bypass
    allow-cancel-with-bids = false
}